- name: Set secure mode
  set_fact:
    secure_mode: "{{ hadoop_security_authentication == 'kerberos' }}"

- name: Install dependencies
  apt:
    name: acl
    state: present

- name: Create Hadoop Group
  group:
    name: hadoop
    state: present

- name: Check if Hadoop directory exists
  ansible.builtin.stat:
    path: /opt/hadoop
  register: hadoop_dir

- name: Download Hadoop archive file
  get_url:
    url: "{{ hadoop_url }}"
    dest: "/tmp/{{ hadoop_archive }}"
    timeout: 300
  when: not hadoop_dir.stat.exists

- name: Unarchive the file
  ansible.builtin.unarchive:
    src: "/tmp/{{ hadoop_archive }}"
    dest: "/opt"
    creates: "/opt/{{ hadoop_archive | replace('.tar.gz', '') }}"
    remote_src: yes
    group: hadoop
  when: not hadoop_dir.stat.exists

- name: Create a symbolic link
  file:
    src: "/opt/{{ hadoop_archive | replace('.tar.gz', '') }}"
    dest: "/opt/hadoop"
    state: "link"
  when: not hadoop_dir.stat.exists

- name: Remove unarchive file
  file:
    path: /tmp/{{ hadoop_archive }}
    state: absent
  when: not hadoop_dir.stat.exists

- name: Create a necessary directories
  file:
    path: "/opt/hadoop/{{ item }}"
    group: hadoop
    mode: "0775"
    state: "directory"
  loop:
    - logs
    - tmp

- name: Copy setting files to hadoop dir
  template:
    src: "{{ item }}.j2"
    dest: "/opt/hadoop/etc/hadoop/{{ item }}"
    group: hadoop
    mode: "0644"
  loop:
    - hadoop-env.sh
    - core-site.xml
    - workers

# In secure mode
- name: Install Kerberos
  apt:
    name: krb5-user
    state: present

- name: Add Realm to Kerberos
  lineinfile:
    path: /etc/krb5.conf
    insertafter: "^\\[realms\\]"
    line: "{{ krb_realm_config }}"

- name: Change default_realm
  ansible.builtin.lineinfile:
    path: /etc/krb5.conf
    regexp: "^(\\s*)default_realm\\s*="
    line: "\\1default_realm = {{ krb_default_realm }}"
    backrefs: yes

- name: Create a Hadoop SSL dir
  file:
    path: /etc/ssl/hadoop
    state: "directory"

- name: Copy SSL credentials
  copy:
    src: "jks/{{ item }}"
    dest: /etc/ssl/hadoop
    group: hadoop
    mode: "0644"
  loop:
    - "keystore.jks"
    - "truststore.jks"

- name: Copy setting files to hadoop dir (Secure mode)
  template:
    src: "{{ item }}.j2"
    dest: "/opt/hadoop/etc/hadoop/{{ item }}"
    group: hadoop
    mode: "0644"
  loop:
    - ssl-server.xml

- name: Create a Keytab dir
  file:
    path: /etc/security/keytab
    state: "directory"
